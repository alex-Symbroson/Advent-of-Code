//app.CreateDebug()

var input = `[[7,[8,[3,5]]],[[[3,6],9],1]]
[[[[1,7],8],[0,4]],[[[0,9],2],[2,[5,6]]]]
[[[4,[4,4]],[8,[4,4]]],[[5,4],6]]
[[[1,[1,3]],[[9,6],1]],[[4,[5,4]],[[4,4],[0,8]]]]
[[[[6,2],[2,5]],[2,1]],[[1,5],7]]
[[[[5,0],[2,7]],[[2,5],2]],[2,[3,2]]]
[[[6,[6,6]],[0,[2,8]]],[[8,[5,6]],[4,5]]]
[[[6,[3,5]],8],[[2,[7,0]],5]]
[[[[7,8],[3,6]],[1,6]],[[[4,2],1],[[0,7],[5,6]]]]
[8,2]
[[5,5],[[2,[9,1]],8]]
[[[4,8],[[1,8],2]],[9,2]]
[2,[[8,[8,3]],[0,6]]]
[[[6,6],[[6,0],6]],[0,[[3,4],3]]]
[[[[2,9],[5,9]],[2,[4,3]]],[6,0]]
[[[6,2],0],[7,7]]
[[[9,6],5],[2,[[0,1],[5,5]]]]
[[6,[[0,1],[5,1]]],5]
[4,[[[4,2],3],[2,[5,0]]]]
[[[7,9],2],2]
[[[5,[2,1]],1],[[1,1],[8,5]]]
[[[[5,9],0],[[1,9],0]],4]
[[7,[0,5]],[[0,3],[8,2]]]
[[6,[9,[7,7]]],6]
[2,[[1,[1,0]],[4,[6,1]]]]
[[0,6],[[[5,1],6],[[4,7],[8,0]]]]
[[[1,[4,7]],[0,[1,2]]],[[1,1],[[1,2],[1,3]]]]
[[8,[3,0]],[3,[1,[8,1]]]]
[[[7,[4,0]],[[8,7],2]],[[7,[7,3]],7]]
[3,[[1,7],2]]
[8,[[[1,5],0],1]]
[[6,[1,4]],7]
[[[[2,6],2],8],1]
[9,7]
[9,[[[1,1],1],[[3,0],[7,3]]]]
[[[[8,5],7],[[5,1],[6,4]]],[4,[[7,6],[2,7]]]]
[[[[8,7],1],0],[[9,9],[[1,0],8]]]
[[9,[[1,1],7]],[[3,0],4]]
[[[[8,2],4],[9,[7,9]]],[[0,2],[[3,0],5]]]
[[[[3,6],3],[[9,7],[0,6]]],[[[4,9],[1,3]],[2,[7,3]]]]
[[[[3,8],0],[[3,6],5]],[[3,[4,2]],[[6,1],[8,5]]]]
[[2,7],[[0,0],8]]
[[[[0,3],7],[2,0]],3]
[[0,2],[[[3,1],0],[0,0]]]
[[[[6,1],7],[[8,4],[2,4]]],[[1,6],[2,3]]]
[[2,[2,[9,1]]],[4,[[0,4],9]]]
[[[3,[5,6]],7],1]
[[[3,0],[8,[9,3]]],[[[1,1],1],[6,7]]]
[[[6,[4,4]],[[1,9],1]],[[[8,1],[9,8]],[[6,3],1]]]
[[[5,8],[[0,3],[1,7]]],[[[3,2],[4,7]],1]]
[[5,5],[[[8,3],[6,6]],2]]
[[[[1,9],[8,5]],[[7,7],8]],[0,[8,[7,4]]]]
[[6,[4,[4,3]]],[5,[6,[7,2]]]]
[[0,[[9,0],0]],5]
[[[[5,6],[1,3]],[[0,5],[7,5]]],[[[0,4],[3,6]],[8,[3,6]]]]
[[3,[[4,7],[7,0]]],[[[4,1],5],[[6,6],[7,4]]]]
[[[[4,3],[0,1]],[[7,3],[2,3]]],[[[3,7],[2,2]],[6,5]]]
[[1,1],[[[1,4],6],[6,[3,9]]]]
[[[[0,8],[2,0]],5],[4,[[6,1],[2,1]]]]
[[7,[3,[7,2]]],[[7,9],8]]
[[[4,[9,8]],[8,[3,2]]],[7,9]]
[[[4,[4,2]],[5,[0,3]]],[[[4,9],[2,9]],[[1,5],[0,8]]]]
[[1,[[9,8],0]],[5,[[4,3],5]]]
[[[[5,1],3],[[2,9],[9,0]]],[1,[6,3]]]
[[[6,4],[6,1]],7]
[[4,8],[[7,2],6]]
[[[5,[4,8]],[[1,7],[2,8]]],[6,[[8,4],[3,5]]]]
[[5,8],[[[4,0],[6,0]],[5,[6,0]]]]
[[3,[[5,3],8]],[8,5]]
[[[2,6],[1,[2,3]]],[[[1,7],[5,7]],[[0,0],[0,5]]]]
[[0,[[4,3],[3,6]]],[[2,[6,6]],[0,[2,9]]]]
[[[5,9],[6,2]],[[7,6],8]]
[[9,2],[1,[[0,5],[5,0]]]]
[[[3,1],[9,3]],3]
[[[[2,0],[4,2]],6],[[[5,2],[7,8]],[[0,7],3]]]
[[7,[[3,9],[6,3]]],[2,[[6,4],3]]]
[[5,[3,[7,4]]],[[2,5],[0,9]]]
[3,7]
[[3,9],[[[4,4],9],[[3,1],7]]]
[[[[4,0],1],[8,[3,6]]],[[9,[4,4]],[[9,9],9]]]
[[8,[[8,1],5]],[[[9,1],4],[[8,5],3]]]
[[6,[[6,3],[3,7]]],4]
[[[1,[0,8]],9],[[8,5],[3,[0,5]]]]
[[[[3,1],0],[[8,5],[1,0]]],[0,2]]
[[2,[4,7]],2]
[[[2,0],[2,2]],4]
[4,[[5,8],5]]
[[[2,[0,5]],[[3,3],[6,6]]],1]
[[[2,[2,4]],[5,[7,1]]],[3,5]]
[[2,[9,[3,9]]],9]
[[[7,[7,1]],[[5,2],1]],[[2,1],[9,[7,3]]]]
[[4,[4,6]],4]
[[[4,2],[9,[3,8]]],[[2,4],0]]
[[[7,[0,3]],4],[[[1,8],4],[[5,1],1]]]
[[[1,3],3],[[4,9],[[0,0],6]]]
[[[4,1],0],[[[5,6],[0,8]],[[2,1],1]]]
[[3,[3,[7,9]]],[[[6,8],8],[[7,9],3]]]
[[4,[[1,6],[4,6]]],[[1,8],[3,8]]]
[[[[5,9],2],[[6,7],4]],3]
[[[[2,1],[1,9]],7],[[[0,9],[0,5]],[[2,5],[5,0]]]]`

var tos=o=>JSON.stringify(o)
var dbg=(o,m)=>(console.log(m+' '+o),o)
var copy = o=>JSON.parse(JSON.stringify(o))

var list = input.split("\n").map(parse);

console.log(part1(copy(list)));
console.log(part2(copy(list)));

function part1(list)
{
    var res = list.shift();
    while(list.length > 0) {
        var res = add(res, list.shift())
        res = reduce(res);
    }
    return mag(res);
}

function part2(list)
{
    var sums = [];
    for(var i=0;i<list.length;i++)
    for(var j=0;j<list.length;j++)
    if(i!=j)sums.push(mag(reduce(add(copy(list[i]), copy(list[j])))))
    return Math.max.apply(0,sums);
}

function mag(l, i=0)
{
    while(l.length > 1) {
        for(var i=0; i<l.length-1; i++)
            if(l[i][1] == l[i+1][1]) {
                var t = 3*l[i][0] + 2*l[i+1][0];
                l.splice(i, 2, [t, l[i][1]-1]);
                break;
            }
    }
    return l[0][0];
}

function parse(s){
    var l=[], d=-1;
    for(var c of s) (
        {'[':_=>d++,']':_=>d--,',':_=>0}[c] 
            || (_=>l.push([1*c,d])) )()
    return l
}

function add(a,b){
    return [...a, ...b].map(e=>(e[1]++,e));
}

function reduce(l){
    do {
        next=false;
        
        for(var v in l) if(l[v*=1][1]>3) {
            if(v>0) l[v-1][0] += l[v][0]
            if(v<l.length-2) l[v+2][0] += l[v+1][0];
            l.splice(v,1);
            l[v] = [0,l[v][1]-1];
            next = true; break;
        }
        
        if(next) continue;

        for(var v in l) if(l[v*=1][0]>9) {
            l.splice(v+1,0, [0.5+l[v][0]/2|0, l[v][1]+1]);
            l[v] = [l[v][0]/2|0, l[v][1]+1]
            next = true; break;
        }
        
    } while(next);

    return l;
}
